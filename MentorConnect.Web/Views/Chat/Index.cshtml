@model MentorConnect.Web.ViewModels.ChatViewModel

@{
ViewData["Title"] = "Chat";
}

<div class="container mt-4">
    <h2 class="text-center text-primary">Chat</h2>

    <div class="row mb-4">
        <div class="col-md-12">
            <div class="input-group">
                <input asp-for="ReceiverEmail" class="form-control" placeholder="Receiver's email" />
                <div class="input-group-append">
                    <button id="loadChatButton" class="btn btn-primary">Load Chat</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-12">
            <div id="messagesList" class="card" style="height: 300px; overflow-y: scroll;">
                <div class="card-body">
                    <!-- Messages will be appended here -->
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-10">
            <input asp-for="Message" class="form-control" placeholder="Your message" />
        </div>
        <div class="col-md-2">
            <button id="sendButton" type="submit" class="btn btn-success btn-block">Send</button>
        </div>
    </div>
</div>

@section Scripts {
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
<script type="text/javascript">
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    function scrollToBottom() {
        const messagesList = document.querySelector("#messagesList .card-body");
        messagesList.scrollTop = messagesList.scrollHeight;
    }

    connection.on("ReceiveMessage", (user, message, sentAt) => {
        const msg = document.createElement("div");
        msg.classList.add("alert", "alert-secondary", "mt-2", "position-relative");

        const date = new Date(sentAt);
        const formattedDate = date.toLocaleString();

        const dateSpan = document.createElement("span");
        dateSpan.classList.add("position-absolute", "bottom-0", "end-0", "text-muted", "small");
        dateSpan.textContent = formattedDate;

        msg.textContent = `${user}: ${message}`;
        msg.appendChild(dateSpan);
        const messagesList = document.querySelector("#messagesList .card-body");
        messagesList.appendChild(msg);
        scrollToBottom();
    });

    connection.start().catch(err => console.error(err.toString()));

    document.getElementById("loadChatButton").addEventListener("click", event => {
        const receiverEmail = document.getElementById("ReceiverEmail").value;
        connection.invoke("LoadChat", receiverEmail).then(() => {
            scrollToBottom();
        }).catch(err => console.error(err.toString()));
        event.preventDefault();
    });

    document.getElementById("sendButton").addEventListener("click", event => {
        sendMessage();
        event.preventDefault();
    });

    document.getElementById("Message").addEventListener("keypress", event => {
        if (event.key === "Enter") {
            sendMessage();
            event.preventDefault();
        }
    });

    function sendMessage() {
        const receiverEmail = document.getElementById("ReceiverEmail").value;
        const message = document.getElementById("Message").value;
        if (message.trim() === "") return; 
        connection.invoke("SendMessage", receiverEmail, message).catch(err => console.error(err.toString()));
        document.getElementById("Message").value = '';
    }
</script>
}